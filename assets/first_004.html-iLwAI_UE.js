import{_ as r,c as o,b as e,d as l,a as t,w as i,r as c,o as m,e as s}from"./app-GRT9i7xS.js";const d="/qianpengzhan/assets/image-20241025151439846-DoGrMM5t.png",h="/qianpengzhan/assets/image-20241025151500017-BbLKAMP9.png",p="/qianpengzhan/assets/image-20241025151527536-Bh-UOOVi.png",f={},g={class:"table-of-contents"};function u(b,a){const n=c("router-link");return m(),o("div",null,[a[4]||(a[4]=e("h1",{id:"初识java-跨平台性的原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#初识java-跨平台性的原理"},[e("span",null,"初识JAVA - 跨平台性的原理")])],-1)),e("nav",g,[e("ul",null,[e("li",null,[t(n,{to:"#【1】java的跨平台"},{default:i(()=>a[0]||(a[0]=[s("【1】JAVA的跨平台")])),_:1,__:[0]})]),e("li",null,[t(n,{to:"#【2】c的跨平台"},{default:i(()=>a[1]||(a[1]=[s("【2】C的跨平台")])),_:1,__:[1]})]),e("li",null,[t(n,{to:"#【3】总结"},{default:i(()=>a[2]||(a[2]=[s("【3】总结")])),_:1,__:[2]})]),e("li",null,[t(n,{to:"#【4】参考资料"},{default:i(()=>a[3]||(a[3]=[s("【4】参考资料")])),_:1,__:[3]})])])]),a[5]||(a[5]=l('<blockquote><p>说在前面的话，本文为个人学习<a href="https://www.bilibili.com/video/BV1RK4y1g7A5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">B站免费的马士兵java初级教程</a>后进行总结的文章，本文主要用于<b>初步了解JAVA</b>。</p></blockquote><h2 id="【1】java的跨平台" tabindex="-1"><a class="header-anchor" href="#【1】java的跨平台"><span>【1】JAVA的跨平台</span></a></h2><p><img src="'+d+'" alt="image-20241025151439846"></p><h2 id="【2】c的跨平台" tabindex="-1"><a class="header-anchor" href="#【2】c的跨平台"><span>【2】C的跨平台</span></a></h2><p><img src="'+h+'" alt="image-20241025151500017"></p><h2 id="【3】总结" tabindex="-1"><a class="header-anchor" href="#【3】总结"><span>【3】总结</span></a></h2><p><strong>JVM(Java Virtual Machine)</strong> 就是一个虚拟的用于执行bytecode字节码的”虚拟计算机”。他也定义了指令集、寄存器集、结构栈、垃圾收集堆、内存区域。JVM负责将Java字节码解释运行，边解释边运行，这样，速度就会受到一定的影响。 不同的操作系统有不同的虚拟机。Java 虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，随处运行”。 Java虚拟机是实现跨平台的核心机制。如图所示：</p><p><img src="'+p+'" alt="image-20241025151527536"></p><p>我们说的语言跨平台是编译后的文件跨平台，而不是源程序跨平台。 接下来我们再比较下两种方式的差异：</p><ul><li>第一，C语言是编译执行的，编译器与平台相关，编译生成的可执行文件与平台相关；</li><li>第二，Java是解释执行的，编译为中间码的编译器与平台无关，编译生成的中间码也与平台无关（一次编译，到处运行），中间码再由解释器解释执行，解释器是与平台相关的，也就是不同的平台需要不同的解释器.</li></ul><h2 id="【4】参考资料" tabindex="-1"><a class="header-anchor" href="#【4】参考资料"><span>【4】参考资料</span></a></h2><ul><li><a href="https://www.bilibili.com/video/BV1RK4y1g7A5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">B站免费的马士兵java初级教程</a></li></ul>',12))])}const q=r(f,[["render",u]]),v=JSON.parse('{"path":"/md/note/java/first/first_004.html","title":"初识JAVA - 跨平台性的原理","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1731987957000,"contributors":[{"name":"qianpengzhan","username":"qianpengzhan","email":"873373549@qq.com","commits":6,"url":"https://github.com/qianpengzhan"}],"changelog":[{"hash":"b501c300c6f686f045a0a83992bd40c61f4b80ba","time":1731987957000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"9299b7507835d7a7e3224fa450d063f39b4c35ee","time":1731427278000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"0d72ed812622b0e6ce4cf4c5fea531bd1f823827","time":1730337181000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"c24af6ce2474a8d9a03d5d5ca6cb5e8f48f45656","time":1729878644000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"132fd6207d8add4eaa670c6aa02968c105bcdfa9","time":1729876855000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"0507c67a008e65809354f354c6fd219e8737c948","time":1729876177000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"}]},"filePathRelative":"md/note/java/first/first_004.md"}');export{q as comp,v as data};
