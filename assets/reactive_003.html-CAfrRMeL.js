import{_ as i,c as u,b as n,d as e,a,w as t,r as c,o as r,e as o}from"./app-GRT9i7xS.js";const k="/qianpengzhan/assets/image-20250701151854474-Bs6liscB.png",m="/qianpengzhan/assets/image-20250701203131135-C6Qu1tEg.png",d="/qianpengzhan/assets/image-20250702094304524-CD3Ez5H8.png",b={},v={class:"table-of-contents"};function h(g,s){const p=c("router-link"),l=c("Mermaid");return r(),u("div",null,[s[29]||(s[29]=n("h1",{id:"第三章-reactive-streams-规范",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第三章-reactive-streams-规范"},[n("span",null,"第三章: Reactive Streams 规范")])],-1)),n("nav",v,[n("ul",null,[n("li",null,[a(p,{to:"#【1】本章学习图解"},{default:t(()=>s[0]||(s[0]=[o("【1】本章学习图解")])),_:1,__:[0]})]),n("li",null,[a(p,{to:"#【2】规范背景"},{default:t(()=>s[1]||(s[1]=[o("【2】规范背景")])),_:1,__:[1]})]),n("li",null,[a(p,{to:"#【3】定义和定位"},{default:t(()=>s[2]||(s[2]=[o("【3】定义和定位")])),_:1,__:[2]})]),n("li",null,[a(p,{to:"#【4】核心目标"},{default:t(()=>s[3]||(s[3]=[o("【4】核心目标")])),_:1,__:[3]})]),n("li",null,[a(p,{to:"#【5】底层机制"},{default:t(()=>s[4]||(s[4]=[o("【5】底层机制")])),_:1,__:[4]})]),n("li",null,[a(p,{to:"#【6】发布-订阅模型运作流程"},{default:t(()=>s[5]||(s[5]=[o("【6】发布-订阅模型运作流程")])),_:1,__:[5]})]),n("li",null,[a(p,{to:"#【7】四大核心组件详解-java中"},{default:t(()=>s[6]||(s[6]=[o("【7】四大核心组件详解(Java中)")])),_:1,__:[6]})]),n("li",null,[a(p,{to:"#【8】关键特性"},{default:t(()=>s[7]||(s[7]=[o("【8】关键特性")])),_:1,__:[7]}),n("ul",null,[n("li",null,[a(p,{to:"#_1-事件驱动与声明式编程"},{default:t(()=>s[8]||(s[8]=[o("1. 事件驱动与声明式编程")])),_:1,__:[8]})]),n("li",null,[a(p,{to:"#_2-流量控制机制"},{default:t(()=>s[9]||(s[9]=[o("2. 流量控制机制")])),_:1,__:[9]})]),n("li",null,[a(p,{to:"#_3-异步非阻塞"},{default:t(()=>s[10]||(s[10]=[o("3. 异步非阻塞")])),_:1,__:[10]})]),n("li",null,[a(p,{to:"#_4-操作符丰富性"},{default:t(()=>s[11]||(s[11]=[o("4. 操作符丰富性")])),_:1,__:[11]})])])]),n("li",null,[a(p,{to:"#【9】应用场景"},{default:t(()=>s[12]||(s[12]=[o("【9】应用场景")])),_:1,__:[12]}),n("ul",null,[n("li",null,[a(p,{to:"#_1-高吞吐实时数据处理"},{default:t(()=>s[13]||(s[13]=[o("1. 高吞吐实时数据处理")])),_:1,__:[13]})]),n("li",null,[a(p,{to:"#_2-微服务通信"},{default:t(()=>s[14]||(s[14]=[o("2. 微服务通信")])),_:1,__:[14]})]),n("li",null,[a(p,{to:"#_3-资源敏感型任务"},{default:t(()=>s[15]||(s[15]=[o("3. 资源敏感型任务")])),_:1,__:[15]})])])]),n("li",null,[a(p,{to:"#【10】主流的实现框架"},{default:t(()=>s[16]||(s[16]=[o("【10】主流的实现框架")])),_:1,__:[16]}),n("ul",null,[n("li",null,[a(p,{to:"#_1-引言"},{default:t(()=>s[17]||(s[17]=[o("1.引言")])),_:1,__:[17]})]),n("li",null,[a(p,{to:"#_2-响应式宣言reactive-manifesto"},{default:t(()=>s[18]||(s[18]=[o("2. 响应式宣言Reactive Manifesto")])),_:1,__:[18]})]),n("li",null,[a(p,{to:"#_3-主流框架之reactor-spring-生态首选"},{default:t(()=>s[19]||(s[19]=[o("3. 主流框架之Reactor（Spring 生态首选）")])),_:1,__:[19]})]),n("li",null,[a(p,{to:"#_4-主流框架之-rxjava-复杂事件流处理"},{default:t(()=>s[20]||(s[20]=[o("4. 主流框架之 RxJava（复杂事件流处理）")])),_:1,__:[20]})]),n("li",null,[a(p,{to:"#_5-主流框架之-akka-streams-分布式流处理"},{default:t(()=>s[21]||(s[21]=[o("5. 主流框架之 Akka Streams (分布式流处理)")])),_:1,__:[21]})]),n("li",null,[a(p,{to:"#_6-主流框架之-java-flow-api-原生轻量级方案"},{default:t(()=>s[22]||(s[22]=[o("6. 主流框架之 Java Flow API （原生轻量级方案）")])),_:1,__:[22]})]),n("li",null,[a(p,{to:"#_7-主流框架之-rsocket-响应式通讯协议"},{default:t(()=>s[23]||(s[23]=[o("7. 主流框架之 RSocket (响应式通讯协议)")])),_:1,__:[23]})])])]),n("li",null,[a(p,{to:"#【11】主流框架选型对比"},{default:t(()=>s[24]||(s[24]=[o("【11】主流框架选型对比")])),_:1,__:[24]})]),n("li",null,[a(p,{to:"#【12】reactive-strems-学习代码"},{default:t(()=>s[25]||(s[25]=[o("【12】Reactive Strems 学习代码")])),_:1,__:[25]})]),n("li",null,[a(p,{to:"#【13】总结"},{default:t(()=>s[26]||(s[26]=[o("【13】总结")])),_:1,__:[26]}),n("ul",null,[n("li",null,[a(p,{to:"#_13-1-响应式编程总结"},{default:t(()=>s[27]||(s[27]=[o("13.1 响应式编程总结")])),_:1,__:[27]})])])]),n("li",null,[a(p,{to:"#【14】参考资料"},{default:t(()=>s[28]||(s[28]=[o("【14】参考资料")])),_:1,__:[28]})])])]),s[30]||(s[30]=e('<blockquote><p>说在前面的话，本文为个人学习<a href="https://www.bilibili.com/video/BV1gsYEeLEuM?spm_id_from=333.788.videopod.episodes&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">SpringBoot3响应式编程精讲</a>后进行总结的文章，本文主要用于<b>响应式编程</b>。</p></blockquote><h2 id="【1】本章学习图解" tabindex="-1"><a class="header-anchor" href="#【1】本章学习图解"><span>【1】本章学习图解</span></a></h2><p><img src="'+k+'" alt="image-20250701151854474"></p><h2 id="【2】规范背景" tabindex="-1"><a class="header-anchor" href="#【2】规范背景"><span>【2】规范背景</span></a></h2><div class="hint-container important"><p class="hint-container-title">规范背景</p><blockquote><p><strong>背景</strong>‌：传统同步阻塞 I/O 在高吞吐场景下易引发线程阻塞或内存溢出，需异步流控机制平衡生产消费速率‌</p></blockquote></div><h2 id="【3】定义和定位" tabindex="-1"><a class="header-anchor" href="#【3】定义和定位"><span>【3】定义和定位</span></a></h2><div class="hint-container info"><p class="hint-container-title">定义</p><blockquote><p><b>Reactive Streams</b> 是一套‌<strong>异步数据流处理标准</strong>‌（JVM 规范），旨在解决高并发场景下生产者（Publisher）与消费者（Subscriber）间的‌<strong>背压控制</strong>‌（Backpressure）问题，确保资源不被压垮。</p><p><b>Reactive Streams</b> 是一套<strong>处理异步数据流并支持背压（Backpressure）</strong> 的标准接口，主要用于<strong>非阻塞、高性能、响应式编程场景</strong></p></blockquote></div><div class="hint-container important"><p class="hint-container-title">本质</p><blockquote><p>其<strong>本质</strong> 是通过标准化接口实现非阻塞、响应式的流式数据处理‌</p></blockquote></div><h2 id="【4】核心目标" tabindex="-1"><a class="header-anchor" href="#【4】核心目标"><span>【4】核心目标</span></a></h2><blockquote><p>**非阻塞背压（Backpressure）**‌：订阅者通过 <code>request(n)</code> 声明可处理的数据量，发布者按需推送，避免因处理速度不匹配导致的资源耗尽或数据丢失‌。</p><p>‌<strong>异步边界</strong>‌：数据生产与消费解耦，支持跨线程或网络的高效协作‌。</p><p>‌<strong>有界队列</strong>‌：发布者维护有限缓冲区，避免内存溢出。</p><p>‌<strong>动态调整</strong>‌：订阅者根据处理能力实时调整请求量（如初始 <code>request(1)</code>，处理完再请求下一个）。</p></blockquote><h2 id="【5】底层机制" tabindex="-1"><a class="header-anchor" href="#【5】底层机制"><span>【5】底层机制</span></a></h2><div class="hint-container important"><p class="hint-container-title">底层机制</p><blockquote><p>背压（Backpressure）与异步流控</p></blockquote><blockquote><p><strong>1.背压核心原理</strong> : 消费者通过 <code>Subscription.request(n)</code> 主动声明可处理的数据量，生产者据此动态调整推送速率，避免数据积压或资源耗尽‌12。</p><ul><li>‌<strong>反馈循环</strong>‌：<code>Subscriber</code> 接收数据后，根据处理能力再次调用 <code>request(n)</code>，形成闭环调控‌23。</li><li>‌<strong>非阻塞队列</strong>‌：数据暂存于有界缓冲区，当缓冲区满时，生产者暂停推送（如 <code>onBackpressureBuffer()</code>）‌24。</li></ul><p>‌<strong>2.线程调度优化</strong>‌</p><ul><li>‌<strong>I/O 与计算分离</strong>‌：通过 <code>publishOn</code> 切换消费者线程，<code>subscribeOn</code> 控制生产者线程，避免阻塞‌56。</li><li>‌<strong>事件循环模型</strong>‌：基于 Netty 等框架，单线程处理多连接，提升高并发吞吐量（如 WebFlux 在 Netty 的实践）‌</li></ul><p><strong>3.正压和背压</strong></p><ul><li>正压：生产者给消费者压力</li><li>背压：生产者给缓存区压力，消费者根据自己的能力慢慢</li></ul></blockquote></div><h2 id="【6】发布-订阅模型运作流程" tabindex="-1"><a class="header-anchor" href="#【6】发布-订阅模型运作流程"><span>【6】发布-订阅模型运作流程</span></a></h2><p><img src="'+m+'" alt="image-20250701203131135"></p>',14)),a(l,{code:"eJxLL0osyFDwCeIKKE3KySzOSC1S0NW1qykuTSpOLspMSq1RCIYxi7gQTLCipx2zn+7eBVdRUJKZnwdTA+aAVRWlFpamFpco5NUowO1Asy0/zy+1okShAqQGj3VLWp5PaHu6rudZx4SnE/oUYAbnorkAAKvJU8M="}),s[31]||(s[31]=e(`<blockquote><p><strong>订阅阶段</strong>‌：<code>Publisher.subscribe(Subscriber)</code> 建立连接，返回 <code>Subscription</code> 对象‌。</p><p>‌<strong>请求阶段</strong>‌：<code>Subscriber</code> 通过 <code>Subscription.request(n)</code> 请求数据‌。</p><p>‌<strong>推送阶段</strong>‌：<code>Publisher</code> 调用 <code>Subscriber.onNext(data)</code> 推送最多 <code>n</code> 条数据‌。</p><p>‌<strong>动态调控</strong>‌：消费者处理完数据后，再次触发 <code>request(m)</code> 续传数据流‌。</p></blockquote><h2 id="【7】四大核心组件详解-java中" tabindex="-1"><a class="header-anchor" href="#【7】四大核心组件详解-java中"><span>【7】四大核心组件详解(Java中)</span></a></h2><blockquote><p>项目中需要先引入jar包 ：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code class="language-xml"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.reactivestreams<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>reactive-streams<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.reactivestreams<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>reactive-streams-tck<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p><img src="`+d+`" alt="image-20250702094304524"></p><blockquote><p>这些组件类均在 <code>java.util.concurrent.Flow</code>下</p></blockquote><h4 id="_1-publisher-发布者" tabindex="-1"><a class="header-anchor" href="#_1-publisher-发布者"><span>1. Publisher（发布者）</span></a></h4><ul><li><p>‌<b>职责</b>：作为数据源，通过 <code>subscribe(Subscriber)</code> 绑定订阅者‌。</p></li><li><p>‌<b>实现示例</b> :</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Publisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> s<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><b>核心方法</b>:</p><ul><li><code>subscribe(Subscriber&lt;? super T&gt; s)</code>: 关联订阅者</li></ul></li></ul><h4 id="_2-subscriber-订阅者" tabindex="-1"><a class="header-anchor" href="#_2-subscriber-订阅者"><span>2. Subscriber（订阅者）</span></a></h4><ul><li><p>‌<b>职责</b>： 作为接收方，接收数据源发出的信息。</p></li><li><p>‌‌<b>实现示例</b> :</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">interface</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Subscription</span> subscription<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">T</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>‌<b>核心方法</b>:</p><ul><li><code>onSubscribe(Subscription s)</code>：接收订阅凭证，初始化请求（如 <code>s.request(10)</code>）。</li><li><code>onNext(T data)</code>：处理单条数据。</li><li><code>onError(Throwable t)</code>：处理错误并终止流‌。</li><li><code>onComplete()</code>：数据流结束通知‌。</li></ul></li></ul><h4 id="‌3-subscription-订阅关系" tabindex="-1"><a class="header-anchor" href="#‌3-subscription-订阅关系"><span>‌3. Subscription（订阅关系）</span></a></h4><ul><li><p>‌<b>职责</b>： 作为订阅关系的维系，协调维护数据源和订阅方的关系，保持不断</p></li><li><p>‌‌<b>实现示例</b> :</p></li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">interface</span> <span class="token class-name">Subscription</span> <span class="token punctuation">{</span></span>
<span class="line">   </span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token keyword">long</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><b>核心方法</b>:</p><ul><li><code>request(long n)</code>： 传递信息</li><li><code>cancle</code>： 终止传递信息</li></ul></li><li><p>‌<b>双向协调器</b> :</p><ul><li>传递 <code>request(n)</code> 背压请求至生产者‌。</li><li>提供 <code>cancel()</code> 终止数据流（如超时或错误）。</li></ul></li></ul><h4 id="‌4-processor-处理器" tabindex="-1"><a class="header-anchor" href="#‌4-processor-处理器"><span>‌4. Processor（处理器）</span></a></h4><ul><li><p>‌<b>职责</b>： 中间处理器</p></li><li><p>‌‌<b>实现示例</b> :</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">interface</span> <span class="token class-name">Processor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">Publisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>‌<b>双重身份</b>：同时实现 <code>Publisher</code> 和 <code>Subscriber</code> 接口，用于流转换（如过滤、映射）。</p></li><li><p>‌<b>典型场景</b>:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 将字符串流转换为大写</span></span>
<span class="line"><span class="token class-name">Processor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> processor <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span></span>
<span class="line">processor<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输入</span></span>
<span class="line">processor<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>data <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出 &quot;HELLO&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="【8】关键特性" tabindex="-1"><a class="header-anchor" href="#【8】关键特性"><span>【8】关键特性</span></a></h2><h3 id="_1-事件驱动与声明式编程" tabindex="-1"><a class="header-anchor" href="#_1-事件驱动与声明式编程"><span>1. 事件驱动与声明式编程</span></a></h3><blockquote><p>数据到达时立即触发处理，而非轮询或阻塞等待，降低延迟。开发者通过声明式API（如<code>map</code>、<code>filter</code>）描述处理逻辑，而非手动控制流程‌。</p></blockquote><h3 id="_2-流量控制机制" tabindex="-1"><a class="header-anchor" href="#_2-流量控制机制"><span>2. 流量控制机制</span></a></h3><blockquote><ul><li><b>拉模式（Pull Model）</b>：订阅者主动请求数据，主动权由消费者掌握（对比传统推模式）。</li><li><b>动态调整</b>：订阅者可根据处理能力动态调整请求速率‌。</li></ul></blockquote><h3 id="_3-异步非阻塞" tabindex="-1"><a class="header-anchor" href="#_3-异步非阻塞"><span>3. 异步非阻塞</span></a></h3><blockquote><ul><li>基于回调或响应式框架（如Reactor、RxJava）实现高效资源利用，避免线程阻塞‌。</li><li>通过 <code>publishOn</code>/<code>subscribeOn</code> 指定执行线程，分离 I/O 密集型与计算密集型任务。</li></ul></blockquote><h3 id="_4-操作符丰富性" tabindex="-1"><a class="header-anchor" href="#_4-操作符丰富性"><span>4. 操作符丰富性</span></a></h3><blockquote><ul><li>‌<strong>转换类</strong>‌：<code>map</code>（映射）、<code>flatMap</code>（异步展开）。</li><li>‌<strong>过滤类</strong>‌：<code>filter</code>（过滤）、<code>take(n)</code>（取前N项）。</li><li>‌<strong>组合类</strong>‌：<code>merge</code>（合并流）、<code>zip</code>（多流聚合）。</li></ul></blockquote><h2 id="【9】应用场景" tabindex="-1"><a class="header-anchor" href="#【9】应用场景"><span>【9】应用场景</span></a></h2><h3 id="_1-高吞吐实时数据处理" tabindex="-1"><a class="header-anchor" href="#_1-高吞吐实时数据处理"><span>1. 高吞吐实时数据处理</span></a></h3><blockquote><p>如社交媒体实时推文分析、物联网设备数据流处理‌。</p></blockquote><h3 id="_2-微服务通信" tabindex="-1"><a class="header-anchor" href="#_2-微服务通信"><span>2. 微服务通信</span></a></h3><blockquote><p>服务间异步消息传递，结合背压避免服务雪崩‌。</p></blockquote><h3 id="_3-资源敏感型任务" tabindex="-1"><a class="header-anchor" href="#_3-资源敏感型任务"><span>3. 资源敏感型任务</span></a></h3><blockquote><p>文件/数据库流式读写，减少内存占用‌。</p></blockquote><table><thead><tr><th>‌<strong>场景</strong>‌</th><th>‌<strong>问题挑战</strong>‌</th><th>‌<strong>Reactive Streams 解决方案</strong>‌</th></tr></thead><tbody><tr><td>‌<strong>实时数据处理</strong>‌</td><td>高吞吐、低延迟需求</td><td>背压控制 + 非阻塞 I/O（如 Kafka 流处理）</td></tr><tr><td>‌<strong>微服务通信</strong>‌</td><td>服务雪崩、资源竞争</td><td>异步消息传递 + 熔断机制（如 RSocket）</td></tr><tr><td>‌<strong>响应式Web服务</strong>‌</td><td>高并发连接下的线程阻塞</td><td>非阻塞服务器（如 Netty + Spring WebFlux）</td></tr><tr><td>‌<strong>大数据流处理</strong>‌</td><td>内存溢出、处理延迟</td><td>分批次拉取 + 背压缓冲（如 Flink 集成）</td></tr></tbody></table><h2 id="【10】主流的实现框架" tabindex="-1"><a class="header-anchor" href="#【10】主流的实现框架"><span>【10】主流的实现框架</span></a></h2><h3 id="_1-引言" tabindex="-1"><a class="header-anchor" href="#_1-引言"><span>1.引言</span></a></h3><blockquote><p>​ 通过前文可知，<code>Reactive Streams</code>本质上是一套标准化接口规范，其核心价值在于为异步流处理建立了背压机制的统一契约，该规范本身并不提供具体实现，而是通过定义<code>Publisher/Subscriber</code>等核心组件及其交互规则，为响应式编程奠定了可互操作的底层基础.。</p><p>​ 在工业界实践中，基于该规范已衍生出多个成熟的技术实现方案（如<code>Project Reactor</code>、<code>RxJava</code>、<code>Akka Streams</code>等），这些框架通过扩展核心接口形成了各具特色的技术生态。对于开发者而言，需根据业务场景中的吞吐量需求、背压处理策略、线程调度模型等关键维度，结合框架特性和社区生态进行多维评估，最终实现精准的技术选型。这些实现框架不仅完整支持响应式宣言（<code>Reactive Manifesto</code>）的核心原则，更通过丰富的操作符和配置策略，为构建弹性化、响应式的分布式系统提供了标准化工具链。</p></blockquote><h3 id="_2-响应式宣言reactive-manifesto" tabindex="-1"><a class="header-anchor" href="#_2-响应式宣言reactive-manifesto"><span>2. 响应式宣言<code>Reactive Manifesto</code></span></a></h3><ul><li><a href="www.reactivemanifesto.org/zh-CN" target="_blank">响应式宣言</a></li><li><b>特性</b><ul><li><b>实现即时响应（Responsive）</b></li><li><b>回弹性（Resilient）</b></li><li><b>消息驱动（Message-Driven）‌</b><ul><li>反应式系统依赖异步的消息传递</li></ul></li></ul></li></ul><h3 id="_3-主流框架之reactor-spring-生态首选" tabindex="-1"><a class="header-anchor" href="#_3-主流框架之reactor-spring-生态首选"><span>3. 主流框架之<code>Reactor</code>（Spring 生态首选）</span></a></h3><ul><li><p><b>我们主要学习这个框架</b></p></li><li><p><b>核心类型</b>：<code>Mono</code>（0/1元素流）、<code>Flux</code>（0-N元素流）。</p></li><li><p><b>关键特性</b>：</p><ul><li>深度集成 Spring 生态（如 <code>WebFlux</code>、<code>Spring Data Reactive</code>）。</li><li>支持丰富的背压策略（<code>Buffer</code>、<code>Drop</code>、<code>Latest</code>）。</li><li>提供 100+ 操作符（<code>map</code>、<code>flatMap</code>、<code>zip</code>）。</li></ul></li><li><p><b>适用场景</b>：</p><ul><li>高并发<code>Web</code> 服务（替代 <code>Spring MVC</code>）。</li><li>微服务间响应式通信（如 <code>RSocket</code>）。</li></ul></li><li><p><b>官网</b>：<a href="https://projectreactor.io/" target="_blank" rel="noopener noreferrer">Project Reactor</a></p></li></ul><h3 id="_4-主流框架之-rxjava-复杂事件流处理" tabindex="-1"><a class="header-anchor" href="#_4-主流框架之-rxjava-复杂事件流处理"><span>4. 主流框架之 <code>RxJava</code>（复杂事件流处理）</span></a></h3><ul><li><b>核心类型</b>：<code>Observable</code>（非背压流）、<code>Flowable</code>（背压流）。</li><li><b>关键特性</b>： <ul><li>支持 300+ 操作符，功能最全的响应式库。</li><li>兼容 Java 6+ 和 Android 平台。</li><li>提供线程调度（<code>observeOn</code>、<code>subscribeOn</code>）。</li></ul></li><li><b>适用场</b>景： <ul><li>Android 应用异步任务。</li><li>复杂事件流合并/转换（如多数据源聚合）。</li></ul></li><li><b>官网</b>：<a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="noopener noreferrer">ReactiveX/RxJava</a></li></ul><h3 id="_5-主流框架之-akka-streams-分布式流处理" tabindex="-1"><a class="header-anchor" href="#_5-主流框架之-akka-streams-分布式流处理"><span>5. 主流框架之 <code>Akka Streams</code> (分布式流处理)</span></a></h3><ul><li><b>核心概念</b>：<code>Source</code>（发布者）、<code>Flow</code>（处理器）、<code>Sink</code>（订阅者）。</li><li><b>关键特性</b>：基于 Actor 模型，支持分布式容错。 <ul><li>内置背压传播，无需手动配置。</li><li>提供流式 DSL（领域特定语言）。</li></ul></li><li><b>适用场景</b>： <ul><li>分布式数据管道（如 Kafka 流处理）。</li><li>高容错性实时计算（如金融风控）。</li></ul></li><li>‌<b>官网</b>：<a href="https://akka.io/docs/" target="_blank" rel="noopener noreferrer">Akka Streams</a></li></ul><h3 id="_6-主流框架之-java-flow-api-原生轻量级方案" tabindex="-1"><a class="header-anchor" href="#_6-主流框架之-java-flow-api-原生轻量级方案"><span>6. 主流框架之 <code>Java Flow API</code> （原生轻量级方案）</span></a></h3><ul><li><b>核心类</b>：<code>Flow.Publisher</code>、<code>Flow.Subscriber</code>、<code>Flow.Subscription</code>。</li><li><b>关键特性</b>： <ul><li>Java 9+ 原生支持，无需第三方依赖。</li><li>提供基础背压控制（<code>request(n)</code>）。</li><li>兼容其他 Reactive Streams 实现。</li></ul></li><li><b>适用场景</b>： <ul><li>轻量级响应式工具开发。</li><li>与其他框架的兼容性适配。</li></ul></li><li><b>文档</b>：<a href="https://docs.oracle.com/javase/9/docs/api/java/util/concurrent/Flow.html" target="_blank" rel="noopener noreferrer">Java 9 Flow API</a></li></ul><h3 id="_7-主流框架之-rsocket-响应式通讯协议" tabindex="-1"><a class="header-anchor" href="#_7-主流框架之-rsocket-响应式通讯协议"><span>7. 主流框架之 <code>RSocket</code> (响应式通讯协议)</span></a></h3><ul><li><b>核心特性</b>： <ul><li>基于 Reactive Streams 的二进制协议，支持 TCP/WebSocket。</li><li>提供四种交互模式：<code>Request-Response</code>、<code>Fire-and-Forget</code>、<code>Stream</code>、<code>Channel</code>。</li></ul></li><li><b>‌适用场景</b>： <ul><li>跨语言微服务通信（Java、Go、Node.js）。</li><li>实时双向数据流（如 IoT 设备控制）。</li></ul></li><li><b>‌集成框架‌</b>： <ul><li>Reactor（Spring RSocket）、RxJava、Kotlin Coroutines。</li></ul></li><li><b>官网</b>：<a href="https://rsocket.io/" target="_blank" rel="noopener noreferrer">RSocket</a></li></ul><h2 id="【11】主流框架选型对比" tabindex="-1"><a class="header-anchor" href="#【11】主流框架选型对比"><span>【11】主流框架选型对比</span></a></h2><table><thead><tr><th>‌<strong>框架</strong>‌</th><th>‌<strong>技术生态</strong>‌</th><th>‌<strong>背压支持</strong>‌</th><th>‌<strong>适用场景</strong>‌</th><th>‌<strong>学习成本</strong>‌</th></tr></thead><tbody><tr><td>‌<strong>Reactor</strong>‌</td><td>Spring/WebFlux</td><td>强</td><td>Web服务、微服务通信</td><td>中</td></tr><tr><td>‌<strong>RxJava</strong>‌</td><td>Android/Java</td><td>强</td><td>移动端、复杂事件流</td><td>高</td></tr><tr><td>‌<strong>Akka Streams</strong>‌</td><td>Akka/Scala</td><td>自动</td><td>分布式系统、大数据管道</td><td>高</td></tr><tr><td>‌<strong>Java Flow</strong>‌</td><td>Java原生</td><td>基础</td><td>轻量级工具、兼容性适配</td><td>低</td></tr><tr><td>‌<strong>RSocket</strong>‌</td><td>多语言（跨平台）</td><td>强</td><td>实时通信、IoT</td><td>中</td></tr></tbody></table><hr><blockquote><p>根据项目需求选择框架：‌</p></blockquote><ul><li><strong>Spring 生态优先 Reactor</strong>‌</li><li><strong>Android 选 RxJava</strong>‌</li><li><strong>分布式系统用 Akka Streams</strong>‌</li><li><strong>轻量级场景用 Java Flow</strong>‌</li><li><strong>跨语言通信用 RSocket</strong>‌</li></ul><h2 id="【12】reactive-strems-学习代码" tabindex="-1"><a class="header-anchor" href="#【12】reactive-strems-学习代码"><span>【12】Reactive Strems 学习代码</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flow</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">CountDownLatch</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Flow</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">SubmissionPublisher</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@author</span> qianpengzhan</span>
<span class="line"> * <span class="token keyword">@since</span> 2025/7/2 11:08</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReactiveStreamLearn</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;主线程开始...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 1.定义1个发布者 发布数据流</span></span>
<span class="line"><span class="token comment">//        Flow.Publisher&lt;String&gt; publisher = new Flow.Publisher&lt;String&gt;() {</span></span>
<span class="line"><span class="token comment">//            public Flow.Subscriber&lt;? super String&gt; subscriber;</span></span>
<span class="line"><span class="token comment">//</span></span>
<span class="line"><span class="token comment">//            // 订阅者订阅发布者的接口 需要保存下订阅者</span></span>
<span class="line"><span class="token comment">//            @Override</span></span>
<span class="line"><span class="token comment">//            public void subscribe(Flow.Subscriber&lt;? super String&gt; subscriber) {</span></span>
<span class="line"><span class="token comment">//                this.subscriber = subscriber;</span></span>
<span class="line"><span class="token comment">//            }</span></span>
<span class="line"><span class="token comment">//        };</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// jvm底层已经对整个发布订阅关系做好了 异步 + 缓存区处理 + 虚拟线程消费 =  响应式系统</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 我们直接使用内置的发布者</span></span>
<span class="line">        <span class="token class-name">SubmissionPublisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> publisher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubmissionPublisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 2.定义1个订阅者 订阅者感兴趣发布者的数据 接收数据</span></span>
<span class="line">        <span class="token class-name">Flow<span class="token punctuation">.</span>Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> subscriber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Flow<span class="token punctuation">.</span>Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">private</span> <span class="token class-name">Flow<span class="token punctuation">.</span>Subscription</span> subscription<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// subscription 订阅关系  订阅凭证</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Flow<span class="token punctuation">.</span>Subscription</span> subscription<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 订阅开始了&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>subscription <span class="token operator">=</span> subscription<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// 水龙头在消费者这边控制 现在就是给我1滴水  意思我这边消费1个数据</span></span>
<span class="line">                subscription<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">String</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 接收到数据: &quot;</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 拿到1个 就再要1个</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;publish-7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;故意报错,到7就不相干了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    subscription<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token comment">// 计数-1</span></span>
<span class="line">                countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 接收错误信号, &quot;</span> <span class="token operator">+</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 异常计数也-1</span></span>
<span class="line">                <span class="token keyword">long</span> count <span class="token operator">=</span> countDownLatch<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 接收完毕&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 3.绑定发布订阅关系</span></span>
<span class="line">        publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 4.测试</span></span>
<span class="line">        <span class="token comment">// 然后我们遍历发布0~10</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 发布者的线程&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 发布10条数据</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//publisher.closeExceptionally(new RuntimeException(&quot;故意报错,打印出来,结束&quot;));</span></span>
<span class="line">                publisher<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token string">&quot;publish-&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                publisher<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token string">&quot;publish-&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 发布者发布的数据都存在发布者的buffer中，是一个array</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//5. 发布者关闭通道</span></span>
<span class="line">        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻塞到所有数据被消费</span></span>
<span class="line">        publisher<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;主线程结束..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">执行后：</span>
<span class="line"><span class="token class-name">Connected</span> <span class="token keyword">to</span> <span class="token namespace">the</span> target <span class="token constant">VM</span><span class="token punctuation">,</span> address<span class="token operator">:</span> &#39;<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">53243</span>&#39;<span class="token punctuation">,</span> transport<span class="token operator">:</span> <span class="token char">&#39;socket&#39;</span></span>
<span class="line">主线程开始<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 订阅开始了<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414466</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414466</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span>main<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 发布者的线程<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414479</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414485</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414485</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414486</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414486</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414486</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414486</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414486</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 接收错误信号<span class="token punctuation">,</span> 故意报错<span class="token punctuation">,</span>到<span class="token number">7</span>就不相干了<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751439414486</span></span>
<span class="line">主线程结束<span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token class-name">Disconnected</span> from the target <span class="token constant">VM</span><span class="token punctuation">,</span> address<span class="token operator">:</span> &#39;<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">53243</span>&#39;<span class="token punctuation">,</span> transport<span class="token operator">:</span> <span class="token char">&#39;socket&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>learn<span class="token punctuation">.</span>reactive<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>flow</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">CountDownLatch</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Flow</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">SubmissionPublisher</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@author</span> qianpengzhan</span>
<span class="line"> * <span class="token keyword">@since</span> 2025/7/2 15:04</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReactiveStreamLearn02</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;主线程开始...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//1 定义1个发布者</span></span>
<span class="line">        <span class="token class-name">SubmissionPublisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> publisher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SubmissionPublisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//2 定义1个订阅者</span></span>
<span class="line">        <span class="token class-name">Flow<span class="token punctuation">.</span>Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> subscriber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Flow<span class="token punctuation">.</span>Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">private</span> <span class="token class-name">Flow<span class="token punctuation">.</span>Subscription</span> subscription<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// subscription 订阅关系  订阅凭证</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Flow<span class="token punctuation">.</span>Subscription</span> subscription<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 订阅开始了&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>subscription <span class="token operator">=</span> subscription<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                <span class="token comment">// 水龙头在消费者这边控制 现在就是给我1滴水  意思我这边消费1个数据</span></span>
<span class="line">                <span class="token comment">// 订阅者慢慢消费</span></span>
<span class="line">                <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                subscription<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">String</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 消费者接收到数据: &quot;</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 拿到1个 就再要1个</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;publish-7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;故意报错,到7就不相干了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// 订阅者慢慢消费</span></span>
<span class="line">                    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                    subscription<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token comment">// 计数-1</span></span>
<span class="line">                countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 消费者接收错误信号, &quot;</span> <span class="token operator">+</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 异常计数也-1</span></span>
<span class="line">                <span class="token keyword">long</span> count <span class="token operator">=</span> countDownLatch<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, 消费者接收完毕&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//3 定义1个中间处理器  给每个元素添加1个 哈哈哈 后缀</span></span>
<span class="line">        <span class="token class-name">MyProcessor</span> processor1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">MyProcessor</span> processor2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">MyProcessor</span> processor3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//4 绑定三者关系</span></span>
<span class="line">        processor3<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        processor2<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>processor3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        processor1<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>processor2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>processor1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//5 发布者发布数据</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            publisher<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token string">&quot;publish-&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">//6 阻塞到完成 关闭流</span></span>
<span class="line">        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        publisher<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 定义1个流中间操作器</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MyProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">SubmissionPublisher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Flow<span class="token punctuation">.</span>Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token class-name">Flow<span class="token punctuation">.</span>Subscription</span> subscription<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token annotation punctuation">@Override</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Flow<span class="token punctuation">.</span>Subscription</span> subscription<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, processer订阅发布者&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>subscription <span class="token operator">=</span> subscription<span class="token punctuation">;</span></span>
<span class="line">            subscription<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token annotation punctuation">@Override</span>  <span class="token comment">// 数据到达 触发回调</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">String</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, processer 拿到数据: &quot;</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 在加工</span></span>
<span class="line">            item <span class="token operator">+=</span> <span class="token string">&quot;: 哈哈哈&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, processor 再加工后的数据：&quot;</span> <span class="token operator">+</span> item <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 再发布出去</span></span>
<span class="line">            <span class="token function">submit</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// 再拿1个数据</span></span>
<span class="line">            subscription<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token annotation punctuation">@Override</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token annotation punctuation">@Override</span></span>
<span class="line">        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, processor  完成了&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;, timestamp: &quot;</span> <span class="token operator">+</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token class-name">Connected</span> <span class="token keyword">to</span> <span class="token namespace">the</span> target <span class="token constant">VM</span><span class="token punctuation">,</span> address<span class="token operator">:</span> &#39;<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">55656</span>&#39;<span class="token punctuation">,</span> transport<span class="token operator">:</span> <span class="token char">&#39;socket&#39;</span></span>
<span class="line">主线程开始<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 订阅开始了<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255902</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer订阅发布者<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255902</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer订阅发布者<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255902</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer订阅发布者<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255902</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255917</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">0</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">0</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">0</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">0</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255922</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">0</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">4</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">4</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">4</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">6</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">7</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">4</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">6</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">8</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255923</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">6</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">4</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">7</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">9</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">7</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">6</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">6</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">8</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">7</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">8</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">7</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">9</span><span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">8</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">9</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">8</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processer 拿到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">9</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> processor 再加工后的数据：publish<span class="token operator">-</span><span class="token number">9</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441255924</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">0</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441256930</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441257935</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441258943</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">3</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441259951</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">4</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441260966</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">5</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441261980</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">6</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441262992</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">7</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441264001</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">8</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441265013</span></span>
<span class="line"><span class="token class-name">Thread</span><span class="token punctuation">[</span><span class="token class-name">ForkJoinPool</span><span class="token punctuation">.</span>commonPool<span class="token operator">-</span>worker<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span><span class="token punctuation">,</span> 消费者接收到数据<span class="token operator">:</span> publish<span class="token operator">-</span><span class="token number">9</span><span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token operator">:</span> 哈哈哈<span class="token punctuation">,</span> timestamp<span class="token operator">:</span> <span class="token number">1751441266026</span></span>
<span class="line"><span class="token class-name">Disconnected</span> from the target <span class="token constant">VM</span><span class="token punctuation">,</span> address<span class="token operator">:</span> &#39;<span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">55656</span>&#39;<span class="token punctuation">,</span> transport<span class="token operator">:</span> <span class="token char">&#39;socket&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="【13】总结" tabindex="-1"><a class="header-anchor" href="#【13】总结"><span>【13】总结</span></a></h2><blockquote><p><strong>价值</strong>‌</p><ul><li>‌<strong>统一规范</strong>‌：解决不同响应式库的兼容性问题。</li><li>‌<strong>标准化集成</strong>‌：Java 9已将Reactive Streams接口纳入<code>java.util.concurrent.Flow</code>类‌。</li></ul><p>‌<strong>挑战</strong>‌</p><ul><li>‌<strong>复杂度</strong>‌：异步回调逻辑需谨慎设计，避免嵌套地狱‌。</li><li>‌<strong>调试困难</strong>‌：异步链路追踪与错误处理需依赖专用工具（如Reactor Debug Agent）‌。</li></ul></blockquote><h3 id="_13-1-响应式编程总结" tabindex="-1"><a class="header-anchor" href="#_13-1-响应式编程总结"><span>13.1 响应式编程总结</span></a></h3><blockquote><ul><li>底层：基于数据缓存队列 + 消息驱动模型 + 异步回调机制</li><li>编码： 流式编程 + 链式调用 + 声明式API</li><li>效果： 优雅全异步 + 消息实时处理 + 高吞吐量 + 占用少量资源</li></ul></blockquote><h2 id="【14】参考资料" tabindex="-1"><a class="header-anchor" href="#【14】参考资料"><span>【14】参考资料</span></a></h2><ul><li><a href="https://www.bilibili.com/video/BV1gsYEeLEuM?spm_id_from=333.788.videopod.episodes&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">SpringBoot3响应式编程精讲</a></li><li><a href="refer_reactive_streams.html" target="_blank">Reactive Streams</a></li><li><a href="www.reactivemanifesto.org/zh-CN" target="_blank">响应式宣言</a></li></ul>`,61))])}const f=i(b,[["render",h]]),P=JSON.parse('{"path":"/md/note/reactive/reactive_003.html","title":"第三章: Reactive Streams 规范","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1751449873000,"contributors":[{"name":"钱鹏展","username":"","email":"873373549@qq.com","commits":5}],"changelog":[{"hash":"b5f0f655cb06befa27aba61322656e9cf5724ab3","time":1751449873000,"email":"873373549@qq.com","author":"钱鹏展","message":"submit"},{"hash":"09b64de9d67a64a0b5e9a3b72758148e4768d973","time":1751423715000,"email":"873373549@qq.com","author":"钱鹏展","message":"submit"},{"hash":"cd923c8cf175bc62a88093a7aa8c8ba3959f2701","time":1751418652000,"email":"873373549@qq.com","author":"钱鹏展","message":"submit"},{"hash":"afe499372b26b72dbd34b82ac8d7082bb082d710","time":1751361590000,"email":"873373549@qq.com","author":"钱鹏展","message":"submit"},{"hash":"eba8949eefa643f36d645526e44b855247f61fdd","time":1751351940000,"email":"873373549@qq.com","author":"钱鹏展","message":"submit"}]},"filePathRelative":"md/note/reactive/reactive_003.md"}');export{f as comp,P as data};
