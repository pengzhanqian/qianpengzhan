import{_ as i,c as r,b as n,d as o,a as p,w as e,e as a,r as c,o as u}from"./app-GRT9i7xS.js";const d="/qianpengzhan/assets/image-20241108170536149-HglMfYHt.png",k="/qianpengzhan/assets/image-20241108170618933-B-j-hytm.png",m="/qianpengzhan/assets/image-20241111103627898-CVw2VCwY.png",v="/qianpengzhan/assets/image-20241111103849193-Dkxjy9p5.png",b="/qianpengzhan/assets/image-20241111104642286-B0OtoCoU.png",g="/qianpengzhan/assets/image-20241111105031687-DyOwKamS.png",f="/qianpengzhan/assets/image-20241111105248668-CE92y8-F.png",j="/qianpengzhan/assets/image-20241111105449004-CVPKTiwy.png",y="/qianpengzhan/assets/image-20241111111522800-CgxSQM7c.png",h={},w={class:"table-of-contents"};function q(_,s){const l=c("router-link"),t=c("font");return u(),r("div",null,[s[41]||(s[41]=n("h1",{id:"java基础知识-基础概念",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#java基础知识-基础概念"},[n("span",null,"JAVA基础知识 - 基础概念")])],-1)),n("nav",w,[n("ul",null,[n("li",null,[p(l,{to:"#【1】标识符"},{default:e(()=>s[0]||(s[0]=[a("【1】标识符")])),_:1,__:[0]}),n("ul",null,[n("li",null,[p(l,{to:"#_1-1-什么是标识符"},{default:e(()=>s[1]||(s[1]=[a("1.1 什么是标识符？")])),_:1,__:[1]})]),n("li",null,[p(l,{to:"#_1-2-标识符的定义规则"},{default:e(()=>s[2]||(s[2]=[a("1.2 标识符的定义规则")])),_:1,__:[2]})])])]),n("li",null,[p(l,{to:"#【2】关键字"},{default:e(()=>s[3]||(s[3]=[a("【2】关键字")])),_:1,__:[3]}),n("ul",null,[n("li",null,[p(l,{to:"#_2-1-什么是关键字"},{default:e(()=>s[4]||(s[4]=[a("2.1 什么是关键字?")])),_:1,__:[4]})]),n("li",null,[p(l,{to:"#_2-2-java关键字的特点"},{default:e(()=>s[5]||(s[5]=[a("2.2 Java关键字的特点")])),_:1,__:[5]})]),n("li",null,[p(l,{to:"#_2-3-java关键字详情"},{default:e(()=>s[6]||(s[6]=[a("2.3 Java关键字详情")])),_:1,__:[6]})]),n("li",null,[p(l,{to:"#_2-4-关键字不要作为标识符"},{default:e(()=>s[7]||(s[7]=[a("2.4 关键字不要作为标识符")])),_:1,__:[7]})])])]),n("li",null,[p(l,{to:"#【3】常量和变量"},{default:e(()=>s[8]||(s[8]=[a("【3】常量和变量")])),_:1,__:[8]}),n("ul",null,[n("li",null,[p(l,{to:"#_3-1-常量"},{default:e(()=>s[9]||(s[9]=[a("3.1 常量")])),_:1,__:[9]})]),n("li",null,[p(l,{to:"#_3-2-变量"},{default:e(()=>s[10]||(s[10]=[a("3.2 变量")])),_:1,__:[10]})])])]),n("li",null,[p(l,{to:"#【4】参考资料"},{default:e(()=>s[11]||(s[11]=[a("【4】参考资料")])),_:1,__:[11]})])])]),s[42]||(s[42]=o('<blockquote><p>说在前面的话，本文为个人学习<a href="https://www.bilibili.com/video/BV1RK4y1g7A5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">B站免费的马士兵java初级教程</a>后进行总结的文章，本文主要用于<b>JAVA基础知识</b>。</p></blockquote><h2 id="【1】标识符" tabindex="-1"><a class="header-anchor" href="#【1】标识符"><span>【1】标识符</span></a></h2><h3 id="_1-1-什么是标识符" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是标识符"><span>1.1 什么是标识符？</span></a></h3>',3)),n("p",null,[s[13]||(s[13]=n("strong",null,"标识符",-1)),s[14]||(s[14]=a(" 读： biao ")),n("b",null,[p(t,{color:"red"},{default:e(()=>s[12]||(s[12]=[a("zhi")])),_:1,__:[12]})]),s[15]||(s[15]=a(" fu。"))]),n("p",null,[s[17]||(s[17]=a("包，类，变量，方法.....等等,只要是起名字的地方,那个 ")),n("strong",null,[p(t,{color:"red"},{default:e(()=>s[16]||(s[16]=[a("名字")])),_:1,__:[16]})]),s[18]||(s[18]=a(" 就是")),s[19]||(s[19]=n("strong",null,"标识符",-1))]),s[43]||(s[43]=n("h3",{id:"_1-2-标识符的定义规则",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-2-标识符的定义规则"},[n("span",null,"1.2 标识符的定义规则")])],-1)),s[44]||(s[44]=n("ul",null,[n("li",null,[a("标识符由以下4个部分组成： "),n("ul",null,[n("li",null,"数字"),n("li",null,"字母"),n("li",null,"下划线_"),n("li",null,"美元符号$")])])],-1)),n("blockquote",null,[p(t,{color:"red"},{default:e(()=>s[20]||(s[20]=[a("注意")])),_:1,__:[20]}),s[24]||(s[24]=a("：")),n("p",null,[s[22]||(s[22]=a("这里的")),p(t,{color:"red"},{default:e(()=>s[21]||(s[21]=[a("字母")])),_:1,__:[21]}),s[23]||(s[23]=a(" 是广义的字母，包含了英文字母、汉字、日语、俄语等，但是一般我们都是使用的英文字母"))])]),n("ul",null,[s[27]||(s[27]=n("li",null,"标识符不可以由以下2个部分组成:",-1)),s[28]||(s[28]=n("li",null,"不可以以数字作为首位",-1)),s[29]||(s[29]=n("li",null,"不可以使用Java语言的关键字 (这个下面会说到有哪些，这里先知道即可)",-1)),n("li",null,[s[26]||(s[26]=a("标识符需要")),p(t,{color:"red"},{default:e(()=>s[25]||(s[25]=[a("见名知意")])),_:1,__:[25]})]),s[30]||(s[30]=n("li",null,"标识符大小写敏感",-1)),s[31]||(s[31]=n("li",null,[a("标识符遵循驼峰规则 "),n("ul",null,[n("li",null,"类名：首字母大写，其他遵循驼峰规则"),n("li",null,"方法名：首字母小写，其他遵循驼峰规则"),n("li",null,"变量名：首字母小写，其他遵循驼峰规则"),n("li",null,"包名：全部小写，不需要遵循驼峰规则")])],-1)),s[32]||(s[32]=n("li",null,[a("标识符的长度限制 "),n("ul",null,[n("li",null,"一般建议6个单词以内，不建议太长")])],-1))]),s[45]||(s[45]=o('<h2 id="【2】关键字" tabindex="-1"><a class="header-anchor" href="#【2】关键字"><span>【2】关键字</span></a></h2><h3 id="_2-1-什么是关键字" tabindex="-1"><a class="header-anchor" href="#_2-1-什么是关键字"><span>2.1 什么是关键字?</span></a></h3><p>被JAVA语言赋予了特殊含义，用作专门用途的单词</p><h3 id="_2-2-java关键字的特点" tabindex="-1"><a class="header-anchor" href="#_2-2-java关键字的特点"><span>2.2 Java关键字的特点</span></a></h3><p>JAVA中所有关键字都为小写</p><h3 id="_2-3-java关键字详情" tabindex="-1"><a class="header-anchor" href="#_2-3-java关键字详情"><span>2.3 Java关键字详情</span></a></h3><p>大家可以从官网中找到： https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html</p><p><img src="'+d+'" alt="image-20241108170536149"></p><p><img src="'+k+'" alt="image-20241108170618933"></p><h3 id="_2-4-关键字不要作为标识符" tabindex="-1"><a class="header-anchor" href="#_2-4-关键字不要作为标识符"><span>2.4 关键字不要作为标识符</span></a></h3>',10)),n("p",null,[n("strong",null,[p(t,{color:"red"},{default:e(()=>s[33]||(s[33]=[a("注意")])),_:1,__:[33]})]),s[34]||(s[34]=a("： 关键字不要作为标识符去使用，我们在日常开发中，不要使用关键字对包名、类名、方法名、变量名进行命名。"))]),s[46]||(s[46]=o(`<h2 id="【3】常量和变量" tabindex="-1"><a class="header-anchor" href="#【3】常量和变量"><span>【3】常量和变量</span></a></h2><h3 id="_3-1-常量" tabindex="-1"><a class="header-anchor" href="#_3-1-常量"><span>3.1 常量</span></a></h3><p>常量通常指的是一个固定的值，例如：1、2、3、’a’、’b’、true、false、”hello Java”等。为了更好的区分和表述，我们把常量分为两种：</p><ul><li><p><strong>字面常量</strong></p><p>一般将1、2、3、’a’、’b’、true、false、”hello Java”等称为字面常量</p><p>字面常量我们又细分为如下：</p><ul><li>整型常量 <ul><li>比如，123，23 这些数字类型的</li></ul></li><li>实型常量 <ul><li>比如： 3.1415926</li></ul></li><li>字符常量 <ul><li>比如：&#39;a&#39;,&#39;c&#39;</li></ul></li><li>逻辑常量 <ul><li>true, false</li></ul></li><li>字符串常量 <ul><li>&quot;Hello Java&quot;</li></ul></li></ul></li><li><p><strong>字符常量</strong></p><p>使用final修饰的PI(圆周率Π)等称为符号常量</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">final</span> <span class="token keyword">double</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul>`,4)),p(t,{color:"red"},{default:e(()=>s[35]||(s[35]=[a("注意：")])),_:1,__:[35]}),s[47]||(s[47]=o('逻辑常量就两个值，一个是true，一个是false 。<h3 id="_3-2-变量" tabindex="-1"><a class="header-anchor" href="#_3-2-变量"><span>3.2 变量</span></a></h3><h4 id="_3-2-1-定义" tabindex="-1"><a class="header-anchor" href="#_3-2-1-定义"><span>3.2.1 定义</span></a></h4><blockquote><p><strong>变量</strong> : 变量本质上就是代表一个”可操作的存储空间”，空间位置是确定的，但是里面放置什么值不确定。我们可通过变量名来访问“对应的存储空间”，从而操纵这个“存储空间”存储的值。</p></blockquote><h4 id="_3-2-2-java中的变量" tabindex="-1"><a class="header-anchor" href="#_3-2-2-java中的变量"><span>3.2.2 Java中的变量</span></a></h4><p>Java是一种<strong>强类型语言</strong> ，每个变量都必须声明其数据类型。变量的数据类型决定了变量占据存储空间的大小。 比如，int a=3; 表示a变量的空间大小为4个字节。变量作为程序中最基本的存储单元，其要素包括变量名，变量类型和作用域。变量在使用前必须对其声明, 只有在变量声明以后，才能为其分配相应长度的存储空间。</p><h4 id="_3-2-3-变量的声明格式" tabindex="-1"><a class="header-anchor" href="#_3-2-3-变量的声明格式"><span>3.2.3 变量的声明格式</span></a></h4><p><strong>type varName [ =value ] [,varName[=value]...];</strong> //[ ]中的内容为可选项，即可有可无 数据类型 变量名 [ =初始值 ] [,变量名 [=初始值]…];</p><h4 id="_3-2-4-变量的声明" tabindex="-1"><a class="header-anchor" href="#_3-2-4-变量的声明"><span>3.2.4 变量的声明</span></a></h4>',9)),n("ul",null,[n("li",null,[s[37]||(s[37]=o(`<p>如果你定义一个变量名，但是没有给这个变量赋值，那么其实你这个变量相当于没有定义</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var01.java</code></p>`,3)),p(t,{color:"red"},{default:e(()=>s[36]||(s[36]=[a("注意：")])),_:1,__:[36]}),s[38]||(s[38]=a(" 这里指定字符集是因为我们nodePad++使用utf-8,而windows默认是gbk,会出现字符集的问题，故指定了字符集")),s[39]||(s[39]=n("p",null,"反编译打开",-1)),s[40]||(s[40]=n("p",null,[n("img",{src:m,alt:"image-20241111103627898"})],-1))])]),s[48]||(s[48]=o(`<p>​ 没有看到变量被编译。</p><ul><li><p>变量如果没有进行赋值的话，那么使用的时候会出错，告诉你：尚未初始化变量</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 若没有赋值就直接输出  会报错</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var01.java</code></p><p><img src="`+v+`" alt="image-20241111103849193"></p></li><li><p>变量的赋值</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 对变量进行赋值 10</span></span>
<span class="line">		age  <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 输出</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var01.java</code></p><p>反编译打开</p><p><img src="`+b+`" alt="image-20241111104642286"></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token comment">//int age;</span></span>
<span class="line">		<span class="token comment">// 对变量进行赋值 10</span></span>
<span class="line">		<span class="token comment">//age = 10;</span></span>
<span class="line">		<span class="token comment">// 我们自己定义的时候直接就可以用一句话定义：</span></span>
<span class="line">		<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 输出</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>变量的赋值变更</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token comment">//int age;</span></span>
<span class="line">		<span class="token comment">// 对变量进行赋值 10</span></span>
<span class="line">		<span class="token comment">//age = 10;</span></span>
<span class="line">		<span class="token comment">// 我们自己定义的时候直接就可以用一句话定义：</span></span>
<span class="line">		<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 对变量的赋值进行变更</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 输出</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var01.java</code></p><p>执行下程序 <code>java Var01</code></p><p><img src="`+g+`" alt="image-20241111105031687"></p><p>结果是最后变更的值： 9</p></li><li><p>变量不可以重复定义</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token comment">//int age;</span></span>
<span class="line">		<span class="token comment">// 对变量进行赋值 10</span></span>
<span class="line">		<span class="token comment">//age = 10;</span></span>
<span class="line">		<span class="token comment">// 我们自己定义的时候直接就可以用一句话定义：</span></span>
<span class="line">		<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 对变量的赋值进行变更</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 重复定义一个相同的变量</span></span>
<span class="line">		<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">66</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 输出</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var01.java</code></p><p><img src="`+f+`" alt="image-20241111105248668"></p></li><li><p>变量的使用</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var01</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 变量的声明(定义变量) 以年龄为例子</span></span>
<span class="line">		<span class="token comment">// 定义一个整数类型的变量，变量名为 age</span></span>
<span class="line">		<span class="token comment">//int age;</span></span>
<span class="line">		<span class="token comment">// 对变量进行赋值 10</span></span>
<span class="line">		<span class="token comment">//age = 10;</span></span>
<span class="line">		<span class="token comment">// 我们自己定义的时候直接就可以用一句话定义：</span></span>
<span class="line">		<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token comment">// 对变量的赋值进行变更</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">		age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> </span>
<span class="line">		<span class="token comment">// 重复定义一个相同的变量  会报错</span></span>
<span class="line">		<span class="token comment">// int age = 66;</span></span>
<span class="line">		<span class="token comment">// 输出</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">int</span> num <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">2024</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var01.java</code></p><p>执行下程序 <code>java Var01</code></p><p><img src="`+j+`" alt="image-20241111105449004"></p></li><li><p>变量的使用扩展</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var02</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span>	</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var02.java</code></p><p>然后进行反汇编： <code>javap -v</code> 得到字节码文件，然后打开</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">E</span><span class="token operator">:</span>\\pri<span class="token operator">-</span>workspace\\java\\<span class="token keyword">var</span><span class="token operator">&gt;</span>javap <span class="token operator">-</span>v <span class="token class-name">Var02</span></span>
<span class="line"><span class="token class-name">Classfile</span> <span class="token operator">/</span><span class="token class-name">E</span><span class="token operator">:</span><span class="token operator">/</span>pri<span class="token operator">-</span>workspace<span class="token operator">/</span>java<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span><span class="token class-name">Var02</span><span class="token punctuation">.</span><span class="token keyword">class</span></span>
<span class="line">  <span class="token class-name">Last</span> modified <span class="token number">2024</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">;</span> size <span class="token number">402</span> bytes</span>
<span class="line">  <span class="token constant">MD5</span> checksum <span class="token number">72e534623440f</span><span class="token number">47f</span>d639631271560284</span>
<span class="line">  <span class="token class-name">Compiled</span> from <span class="token string">&quot;Var02.java&quot;</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var02</span></span>
<span class="line">  minor version<span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line">  major version<span class="token operator">:</span> <span class="token number">52</span></span>
<span class="line">  flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_SUPER</span></span>
<span class="line"><span class="token class-name">Constant</span> pool<span class="token operator">:</span></span>
<span class="line">   #<span class="token number">1</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">5.</span>#<span class="token number">14</span>         <span class="token comment">// java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span></span>
<span class="line">   #<span class="token number">2</span> <span class="token operator">=</span> <span class="token class-name">Fieldref</span>           #<span class="token number">15.</span>#<span class="token number">16</span>        <span class="token comment">// java/lang/System.out:Ljava/io/PrintStream;</span></span>
<span class="line">   #<span class="token number">3</span> <span class="token operator">=</span> <span class="token class-name">Methodref</span>          #<span class="token number">17.</span>#<span class="token number">18</span>        <span class="token comment">// java/io/PrintStream.println:(I)V</span></span>
<span class="line">   #<span class="token number">4</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">19</span>            <span class="token comment">// Var02</span></span>
<span class="line">   #<span class="token number">5</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">20</span>            <span class="token comment">// java/lang/Object</span></span>
<span class="line">   #<span class="token number">6</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token generics"><span class="token punctuation">&lt;</span>init<span class="token punctuation">&gt;</span></span></span>
<span class="line">   #<span class="token number">7</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span></span>
<span class="line">   #<span class="token number">8</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Code</span></span>
<span class="line">   #<span class="token number">9</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">LineNumberTable</span></span>
<span class="line">  #<span class="token number">10</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               main</span>
<span class="line">  #<span class="token number">11</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span></span>
<span class="line">  #<span class="token number">12</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">SourceFile</span></span>
<span class="line">  #<span class="token number">13</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Var02</span><span class="token punctuation">.</span>java</span>
<span class="line">  #<span class="token number">14</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">6</span><span class="token operator">:</span>#<span class="token number">7</span>          <span class="token comment">// &quot;&lt;init&gt;&quot;:()V</span></span>
<span class="line">  #<span class="token number">15</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">21</span>            <span class="token comment">// java/lang/System</span></span>
<span class="line">  #<span class="token number">16</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">22</span><span class="token operator">:</span>#<span class="token number">23</span>        <span class="token comment">// out:Ljava/io/PrintStream;</span></span>
<span class="line">  #<span class="token number">17</span> <span class="token operator">=</span> <span class="token class-name">Class</span>              #<span class="token number">24</span>            <span class="token comment">// java/io/PrintStream</span></span>
<span class="line">  #<span class="token number">18</span> <span class="token operator">=</span> <span class="token class-name">NameAndType</span>        #<span class="token number">25</span><span class="token operator">:</span>#<span class="token number">26</span>        <span class="token comment">// println:(I)V</span></span>
<span class="line">  #<span class="token number">19</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Var02</span></span>
<span class="line">  #<span class="token number">20</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">Object</span></span>
<span class="line">  #<span class="token number">21</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">System</span></span>
<span class="line">  #<span class="token number">22</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               out</span>
<span class="line">  #<span class="token number">23</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token class-name">Ljava</span><span class="token operator">/</span>io<span class="token operator">/</span><span class="token class-name">PrintStream</span><span class="token punctuation">;</span></span>
<span class="line">  #<span class="token number">24</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               java<span class="token operator">/</span>io<span class="token operator">/</span><span class="token class-name">PrintStream</span></span>
<span class="line">  #<span class="token number">25</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               println</span>
<span class="line">  #<span class="token number">26</span> <span class="token operator">=</span> <span class="token class-name">Utf8</span>               <span class="token punctuation">(</span><span class="token class-name">I</span><span class="token punctuation">)</span><span class="token class-name">V</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token class-name">Var02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token class-name">V</span></span>
<span class="line">    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span></span>
<span class="line">    <span class="token class-name">Code</span><span class="token operator">:</span></span>
<span class="line">      stack<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">         <span class="token number">0</span><span class="token operator">:</span> aload_0</span>
<span class="line">         <span class="token number">1</span><span class="token operator">:</span> invokespecial #<span class="token number">1</span>                  <span class="token comment">// Method java/lang/Object.&quot;&lt;init&gt;&quot;:()V</span></span>
<span class="line">         <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">return</span></span>
<span class="line">      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span></span>
<span class="line">        line <span class="token number">1</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    descriptor<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token operator">/</span>lang<span class="token operator">/</span><span class="token class-name">String</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token class-name">V</span></span>
<span class="line">    flags<span class="token operator">:</span> <span class="token constant">ACC_PUBLIC</span><span class="token punctuation">,</span> <span class="token constant">ACC_STATIC</span></span>
<span class="line">    <span class="token class-name">Code</span><span class="token operator">:</span></span>
<span class="line">      stack<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> locals<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> args_size<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">         <span class="token number">0</span><span class="token operator">:</span> bipush        <span class="token number">10</span></span>
<span class="line">         <span class="token number">2</span><span class="token operator">:</span> istore_1</span>
<span class="line">         <span class="token number">3</span><span class="token operator">:</span> bipush        <span class="token number">20</span></span>
<span class="line">         <span class="token number">5</span><span class="token operator">:</span> istore_2</span>
<span class="line">         <span class="token number">6</span><span class="token operator">:</span> iload_1</span>
<span class="line">         <span class="token number">7</span><span class="token operator">:</span> iload_2</span>
<span class="line">         <span class="token number">8</span><span class="token operator">:</span> iadd</span>
<span class="line">         <span class="token number">9</span><span class="token operator">:</span> istore_3</span>
<span class="line">        <span class="token number">10</span><span class="token operator">:</span> getstatic     #<span class="token number">2</span>                  <span class="token comment">// Field java/lang/System.out:Ljava/io/PrintStream;</span></span>
<span class="line">        <span class="token number">13</span><span class="token operator">:</span> iload_3</span>
<span class="line">        <span class="token number">14</span><span class="token operator">:</span> invokevirtual #<span class="token number">3</span>                  <span class="token comment">// Method java/io/PrintStream.println:(I)V</span></span>
<span class="line">        <span class="token number">17</span><span class="token operator">:</span> <span class="token keyword">return</span></span>
<span class="line">      <span class="token class-name">LineNumberTable</span><span class="token operator">:</span></span>
<span class="line">        line <span class="token number">3</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line">        line <span class="token number">4</span><span class="token operator">:</span> <span class="token number">3</span></span>
<span class="line">        line <span class="token number">5</span><span class="token operator">:</span> <span class="token number">6</span></span>
<span class="line">        line <span class="token number">6</span><span class="token operator">:</span> <span class="token number">10</span></span>
<span class="line">        line <span class="token number">7</span><span class="token operator">:</span> <span class="token number">17</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token class-name">SourceFile</span><span class="token operator">:</span> <span class="token string">&quot;Var02.java&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 <code>bipush</code> <code>istore</code> 等字节码的指令，这些就是对内存的操作。</p></li><li><p>变量的内存</p><ul><li>每一个变量，底层系统就会分配一小块内存给他，存储它的名字和值。后续JVM再细讨论。</li></ul></li><li><p>变量的作用域</p><blockquote><p>作用域指的就是作用范围，变量在什么范围中有效。作用范围就是离它最近的{}</p></blockquote><p>我们根据这个作用域把变量分为了</p><ul><li>局部变量 <ul><li>作用于方法内部</li></ul></li><li>成员变量 <ul><li>作用于类内部</li></ul></li></ul><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Var03</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 成员变量</span></span>
<span class="line">	<span class="token keyword">static</span> <span class="token keyword">int</span> a  <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 局部变量</span></span>
<span class="line">		<span class="token keyword">int</span> b  <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span></span>
<span class="line">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译一下 <code>javac -encoding utf-8 Var03.java</code></p><p>执行下程序 <code>java Var03</code></p><p><img src="`+y+'" alt="image-20241111111522800"></p></li><li><p>至此，变量就暂时学习完毕。</p></li></ul><h2 id="【4】参考资料" tabindex="-1"><a class="header-anchor" href="#【4】参考资料"><span>【4】参考资料</span></a></h2><ul><li><a href="https://www.bilibili.com/video/BV1RK4y1g7A5/?spm_id_from=333.337.search-card.all.click&amp;vd_source=65c7f6924d2d8ba5fa0d4c448818e08a" target="_blank" rel="noopener noreferrer">B站免费的马士兵java初级教程</a></li></ul>',4))])}const S=i(h,[["render",q]]),x=JSON.parse('{"path":"/md/note/java/basic/basic_002.html","title":"JAVA基础知识 - 基础概念","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1731987957000,"contributors":[{"name":"qianpengzhan","username":"qianpengzhan","email":"873373549@qq.com","commits":8,"url":"https://github.com/qianpengzhan"}],"changelog":[{"hash":"b501c300c6f686f045a0a83992bd40c61f4b80ba","time":1731987957000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"9299b7507835d7a7e3224fa450d063f39b4c35ee","time":1731427278000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"132e6f67b4a77f0d86f2e893c7731501102dd5aa","time":1730900440000,"email":"873373549@qq.com","author":"qianpengzhan","message":"bugfixed"},{"hash":"816e87eda0a94ac7ac2f6098161ff0c9b9c6c450","time":1730770930000,"email":"873373549@qq.com","author":"qianpengzhan","message":"bugfixed"},{"hash":"0d72ed812622b0e6ce4cf4c5fea531bd1f823827","time":1730337181000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"c24af6ce2474a8d9a03d5d5ca6cb5e8f48f45656","time":1729878644000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"0507c67a008e65809354f354c6fd219e8737c948","time":1729876177000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"},{"hash":"baf0d27cabc8c413083f6ca1554256b552b50500","time":1729831714000,"email":"873373549@qq.com","author":"qianpengzhan","message":"init"}]},"filePathRelative":"md/note/java/basic/basic_002.md"}');export{S as comp,x as data};
